{"version":3,"sources":["common.js","Author/Posts.js","Author/Author.js","Posts/Posts.js","Collection/Collection.js","App.js","serviceWorker.js","index.js"],"names":["common","url","Promise","reslove","reject","fetch","method","then","response","status","json","data","catch","err","text","length","substring","columns","title","dataIndex","key","width","render","post","href","target","Post","props","i","item","blogList","updateTime","push","date","dataSource","pagination","size","Search","Input","Author","isAuthorAdded","collects","filter","deleteAuthor","otherCollect","JSON","parse","localStorage","getItem","splice","findIndex","setItem","stringify","collectAuthor","name","blogUrl","window","location","reload","forEach","filterAuthor","author","filtered","state","indexOf","setState","processData","res","collect","fetchData","console","log","className","style","border","subTitle","placeholder","onSearch","value","expandedRowRender","subLongString","record","onClick","bind","align","Component","Posts","filterPost","get24HourTime","time","millisecond","timeString","replace","Date","getTime","posts","p","sort","a","b","Collection","blogurl","getToday","getFullYear","getMonth","getDate","isThisWeek","td","sunday","monday","today","thisWeekday","getDay","timeGap","d","collection","pkey","c","Content","Layout","Sider","Header","App","onCollapse","collapsed","minHeight","padding","type","fontSize","color","collapsible","this","theme","background","mode","defaultSelectedKeys","Item","to","margin","path","exact","component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.638329a2.chunk.js","sourcesContent":["class common {\r\n    fetchData (url) {\r\n        return new Promise((reslove, reject) => {\r\n            fetch(url, {method: 'get'})\r\n            .then((response) => {\r\n                if (response.status !== 200) {\r\n                    reject('Error, Status Code: ', response.status);\r\n                }\r\n\r\n                response.json().then((data) => {\r\n                    reslove(data);\r\n                });\r\n            }).catch((err) => {\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    subLongString(text, length) {\r\n        if (text.length > length) {\r\n            text = text.substring(0, length) + '...';\r\n        }\r\n    \r\n        return text;\r\n    }\r\n}\r\n\r\nexport default common;","import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nconst columns = [\r\n    { \r\n        title: '文章',\r\n        dataIndex: 'post',\r\n        key: 'post',\r\n        width: '80%',\r\n        render: (post) => {\r\n            return (\r\n                <a href={post.url} target='_blank'>{post.title}</a>\r\n            )\r\n        }\r\n    },\r\n    { title: '更新日期', dataIndex: 'date', key: 'date', width: '20%' },\r\n];\r\n\r\nconst Post = (props) => {\r\n    const data = [];\r\n    for (let i = 0; i < props.item.blogList.length; i++) {\r\n        const title = props.item.blogList[i].title;\r\n        const url = props.item.blogList[i].url;\r\n        const updateTime = props.item.updateTime;\r\n\r\n        data.push({\r\n            key: i,\r\n            post: {\r\n                title: title,\r\n                url: url\r\n            },\r\n            date: updateTime,\r\n        });\r\n    }\r\n\r\n    return (<Table columns={columns} dataSource={data} pagination={false} size='small' />);\r\n}\r\n\r\nexport default Post;","import React, { Component } from 'react';\r\nimport common from '../common';\r\nimport Post from './Posts';\r\nimport { Table, PageHeader, Input } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport './Author.css';\r\nconst { Search } = Input;\r\n\r\nclass Author extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            data: []\r\n        }\r\n\r\n        this.columns = [\r\n            { title: '作者', dataIndex: 'name', key: 'name', width: '15%' },\r\n            {\r\n                title: 'Blog',\r\n                dataIndex: 'blogUrl',\r\n                key: 'blogUrl',\r\n                width: '75%',\r\n                render: (text) => {\r\n                    return (\r\n                        <a href={text} target='_blank'>{new common().subLongString(text, 100)}</a>\r\n                    )\r\n                },\r\n            },\r\n            {\r\n                title: '',\r\n                dataIndex: 'collect',\r\n                key: 'collect',\r\n                width: '10%',\r\n                render: (text, record) => {\r\n                    return (<a onClick={this.collectAuthor.bind(this, record)}>{text}</a>);\r\n                },\r\n                align: 'right'\r\n            },\r\n        ];\r\n\r\n        this.fetch();\r\n    }\r\n\r\n    isAuthorAdded = (collects, key) => {\r\n        const isAdded = collects.filter((item) => {\r\n            return item === key;\r\n        });\r\n\r\n        if (isAdded.length > 0) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    deleteAuthor = (key) => {\r\n        const otherCollect = JSON.parse(localStorage.getItem('collect'));\r\n        otherCollect.splice(otherCollect.findIndex((item) => {\r\n            return item === key;\r\n        }), 1);\r\n        localStorage.setItem('collect', JSON.stringify(otherCollect));\r\n    }\r\n\r\n    collectAuthor = (post) => {\r\n        const collects = [];\r\n        const key = post.name + post.blogUrl;\r\n        const otherCollect = JSON.parse(localStorage.getItem('collect'));\r\n        if (otherCollect) {\r\n            const isAdded = this.isAuthorAdded(otherCollect, key);\r\n            if (isAdded) {\r\n                this.deleteAuthor(key);\r\n                window.location.reload();\r\n                return;\r\n            }\r\n\r\n            otherCollect.forEach((item) => {\r\n                collects.push(item);\r\n            });\r\n        }\r\n\r\n        collects.push(key);\r\n        localStorage.setItem('collect', JSON.stringify(collects));\r\n        window.location.reload();\r\n    }\r\n\r\n    filterAuthor = (author) => {\r\n        const filtered = this.state.data.filter((item) => {\r\n            return item.name.indexOf(author) > -1;\r\n        });\r\n\r\n        this.setState({\r\n            data: filtered\r\n        });\r\n    }\r\n\r\n    processData = (res) => {\r\n        const collects = JSON.parse(localStorage.getItem('collect'));\r\n        const data = JSON.parse(JSON.stringify(res));\r\n        for (let i = 0; i < data.length; i++) {\r\n            const name = data[i].name;\r\n            const blogUrl = data[i].blogUrl;\r\n            const key = name + blogUrl;\r\n            const isAdded = collects.filter((item) => {\r\n                return item === key;\r\n            });\r\n\r\n            if (isAdded.length > 0) {\r\n                data[i].collect = '取消收藏';\r\n            } else {\r\n                data[i].collect = '收藏';\r\n            }\r\n\r\n            data[i].key = i;\r\n        }\r\n\r\n        this.setState({\r\n            data: data\r\n        });\r\n    }\r\n\r\n    fetch = () => {\r\n        const api = 'https://raw.githubusercontent.com/hexschool/w3hexschool-API/master/data.json';\r\n        new common().fetchData(api)\r\n            .then((res) => {\r\n                // const data = JSON.parse(JSON.stringify(res));\r\n                // data.forEach((item, index) => item.key = index);\r\n                // this.setState({\r\n                //     data: data\r\n                // });\r\n                this.processData(res);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div className='Table'>\r\n                <PageHeader\r\n                    style={{\r\n                        border: '1px solid rgba(0,0,0,0.08)',\r\n                    }}\r\n                    title='所有作者'\r\n                    subTitle='按下作者左邊的 + 可查看作者的所有文章'\r\n                />\r\n                <Search\r\n                    className='search'\r\n                    placeholder='搜尋作者'\r\n                    onSearch={\r\n                        (value) => {\r\n                            this.filterAuthor(value);\r\n                        }\r\n                    }\r\n                    style={{ width: 200 }}\r\n                />\r\n                <Table\r\n                    columns={this.columns}\r\n                    expandedRowRender={(item) => <Post item={item} />}\r\n                    dataSource={this.state.data}\r\n                    size='small'\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Author;","import React, { Component } from 'react';\r\nimport common from '../common';\r\nimport { Table, PageHeader, Input, Icon } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nconst { Search } = Input;\r\n\r\nclass Posts extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            data: []\r\n        }\r\n\r\n        this.columns = [\r\n            { title: '作者', dataIndex: 'name', key: 'name', width: '15%' },\r\n            {\r\n                title: '文章',\r\n                dataIndex: 'post',\r\n                key: 'post',\r\n                width: '65%',\r\n                render: (post) => {\r\n                    return (\r\n                        <a href={post.url} target='_blank'>{new common().subLongString(post.title, 80)}</a>\r\n                    )\r\n                },\r\n            },\r\n            {\r\n                title: '更新時間',\r\n                dataIndex: 'updateTime',\r\n                key: 'updateTime',\r\n                width: '20%'\r\n            },\r\n        ];\r\n\r\n        this.fetch();\r\n    }\r\n\r\n    filterPost = (title) => {\r\n        const filtered = this.state.data.filter((item) => {\r\n            return item.post.title.indexOf(title) > -1;\r\n        });\r\n\r\n        this.setState({\r\n            data: filtered\r\n        });\r\n    }\r\n\r\n    get24HourTime = (time) => {\r\n        let millisecond;\r\n        if (time.indexOf('上午') > -1) {\r\n            const timeString = time.replace('上午', '');\r\n            millisecond = new Date(timeString).getTime();\r\n        } else if (time.indexOf('下午') > -1) {\r\n            const timeString = time.replace('下午', '');\r\n            millisecond = new Date(timeString).getTime() + (12 * 60 * 60 * 1000);\r\n        }\r\n\r\n        return millisecond;\r\n    }\r\n\r\n    processData = (data) => {\r\n        let posts = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            for (let p = 0; p < data[i].blogList.length; p++) {\r\n                const name = data[i].name;\r\n                const title = data[i].blogList[p].title;\r\n                const url = data[i].blogList[p].url;\r\n                const updateTime = data[i].updateTime;\r\n\r\n                posts.push({\r\n                    key: i + url,\r\n                    name: name,\r\n                    post: { title, url },\r\n                    updateTime: updateTime\r\n                });\r\n            }\r\n        }\r\n\r\n        posts = posts.sort((a, b) => {\r\n            const aTime = this.get24HourTime(a.updateTime);\r\n            const bTime = this.get24HourTime(b.updateTime);\r\n            return aTime > bTime ? -1 : 1;\r\n        });\r\n\r\n        this.setState({\r\n            data: posts\r\n        });\r\n    }\r\n\r\n    fetch = () => {\r\n        const api = 'https://raw.githubusercontent.com/hexschool/w3hexschool-API/master/data.json';\r\n        new common().fetchData(api)\r\n            .then((res) => {\r\n                this.processData(res);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div className='Table'>\r\n                <PageHeader\r\n                    style={{\r\n                        border: '1px solid rgba(0,0,0,0.08)',\r\n                    }}\r\n                    title='所有文章'\r\n                    subTitle='文章依照更新時間由新到舊排序'\r\n                />\r\n                <Search\r\n                    className='search'\r\n                    placeholder='搜尋文章'\r\n                    onSearch={\r\n                        (value) => {\r\n                            this.filterPost(value);\r\n                        }\r\n                    }\r\n                    style={{ width: 200 }}\r\n                />\r\n                <Table\r\n                    columns={this.columns}\r\n                    dataSource={this.state.data}\r\n                    size='small'\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Posts;","import React, { Component } from 'react';\r\nimport common from '../common';\r\nimport { Table, PageHeader } from 'antd';\r\nimport 'antd/dist/antd.css';\r\n\r\nclass Collection extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            data: []\r\n        }\r\n\r\n        this.columns = [\r\n            { title: '作者', dataIndex: 'name', key: 'name', width: '15%' },\r\n            {\r\n                title: '文章',\r\n                dataIndex: 'post',\r\n                key: 'post',\r\n                width: '65%',\r\n                render: (post) => {\r\n                    return (\r\n                        <a href={post.url} target='_blank'>{new common().subLongString(post.title, 80)}</a>\r\n                    )\r\n                },\r\n            },\r\n            {\r\n                title: '更新時間',\r\n                dataIndex: 'updateTime',\r\n                key: 'updateTime',\r\n                width: '20%'\r\n            },\r\n        ];\r\n\r\n        this.fetch();\r\n    }\r\n\r\n    collectAuthor = (post) => {\r\n        const collects = [];\r\n        const otherCollect = JSON.parse(localStorage.getItem('collect'));\r\n        if (otherCollect.length > 0) {\r\n            otherCollect.forEach((item) => {\r\n                collects.push(item);\r\n            });\r\n        }\r\n        collects.push({\r\n            name: post.name,\r\n            blogurl: post.blogUrl\r\n        });\r\n        localStorage.setItem('collect', JSON.stringify(collects));\r\n    }\r\n\r\n    get24HourTime = (time) => {\r\n        let millisecond;\r\n        if (time.indexOf('上午') > -1) {\r\n            const timeString = time.replace('上午', '');\r\n            millisecond = new Date(timeString).getTime();\r\n        } else if (time.indexOf('下午') > -1) {\r\n            const timeString = time.replace('下午', '');\r\n            millisecond = new Date(timeString).getTime() + (12 * 60 * 60 * 1000);\r\n        }\r\n\r\n        return millisecond;\r\n    }\r\n\r\n    getToday = () => {\r\n        const time = new Date();\r\n        const year = time.getFullYear()\r\n        let month = time.getMonth() + 1;\r\n        let date = time.getDate();\r\n    \r\n        return year + '-' + month + '-' + date + ' 00:00';\r\n    }\r\n\r\n    isThisWeek = (td) => {\r\n        const today = new Date(this.getToday());\r\n        const thisWeekday = today.getDay();\r\n\r\n        let sunday, monday;\r\n        if (thisWeekday === 0) {\r\n            sunday = today.getTime();\r\n        } else {\r\n            const timeGap = (thisWeekday - 1);\r\n            monday = today.getTime() - (1000 * 60 * 60 * 24 * timeGap);\r\n        }\r\n\r\n        sunday = monday + (1000 * 60 * 60 * 24 * 7);\r\n        const d = new Date(td).getTime();\r\n        if (d < sunday && d > monday) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    processData = (data) => {\r\n        let posts = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            for (let p = 0; p < data[i].blogList.length; p++) {\r\n                const name = data[i].name;\r\n                const title = data[i].blogList[p].title;\r\n                const blogurl = data[i].blogUrl;\r\n                const url = data[i].blogList[p].url;\r\n                const updateTime = data[i].updateTime;\r\n\r\n                posts.push({\r\n                    key: i + url,\r\n                    name: name,\r\n                    blogurl: blogurl,\r\n                    post: { title, url },\r\n                    updateTime: updateTime\r\n                });\r\n            }\r\n        }\r\n\r\n        posts = posts.filter((item) => {\r\n            const updateTime = this.get24HourTime(item.updateTime);\r\n            return this.isThisWeek(updateTime) === true;\r\n        });\r\n\r\n        const collects = JSON.parse(localStorage.getItem('collect'));\r\n        \r\n        const collection = [];\r\n        for (let p = 0; p < posts.length; p++) {\r\n            const pkey = posts[p].name + posts[p].blogurl;\r\n            for (let c = 0; c < collects.length; c++) {\r\n                const ckey = collects[c];\r\n                if (pkey === ckey) {\r\n                    collection.push(posts[p]);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            data: collection\r\n        });\r\n    }\r\n\r\n    fetch = () => {\r\n        const api = 'https://raw.githubusercontent.com/hexschool/w3hexschool-API/master/data.json';\r\n        new common().fetchData(api)\r\n            .then((res) => {\r\n                this.processData(res);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <div className='Table'>\r\n                <PageHeader\r\n                    style={{\r\n                        border: '1px solid rgba(0,0,0,0.08)',\r\n                    }}\r\n                    title='我的收藏'\r\n                    subTitle='顯示已收藏作者的當週文章'\r\n                />\r\n                <Table\r\n                    columns={this.columns}\r\n                    dataSource={this.state.data}\r\n                    size='small'\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Collection;","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport './App.css';\r\nimport { Author, Posts, Collection } from './pages';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nconst { Content, Sider, Header } = Layout;\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      collapsed: false\r\n    }\r\n  }\r\n\r\n  onCollapse = (collapsed) => {\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout style={{ minHeight: '100vh' }}>\r\n        <Header style={{ padding: '0px 25px' }}>\r\n          <h1 className=\"logo\">W3HexSchool 鐵人賽</h1>\r\n          <a href=\"https://github.com/B-l-u-e-b-e-r-r-y/BlogList\" target=\"_blank\">\r\n            <Icon type=\"github\" className=\"githubIcon\" style={{ fontSize: '28px', color: '#ffffff' }} />\r\n          </a>\r\n        </Header>\r\n        <Layout>\r\n          <Sider collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}\r\n            theme='light'\r\n            width={180}\r\n            style={{ background: '#fff' }}>\r\n            <Menu theme=\"light\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n              <Menu.Item key=\"1\">\r\n                <Link to=\"/\">\r\n                  <Icon type=\"file-text\" />\r\n                  <span>所有文章</span>\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"2\">\r\n                <Link to=\"/Author\">\r\n                  <Icon type=\"user\" />\r\n                  <span>所有作者</span>\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"9\">\r\n                <Link to=\"/Collection\">\r\n                  <Icon type=\"heart\" />\r\n                  <span>我的收藏</span>\r\n                </Link>\r\n              </Menu.Item>\r\n            </Menu>\r\n          </Sider>\r\n          <Layout>\r\n            <Content\r\n              style={{\r\n                padding: 24,\r\n                margin: 0,\r\n                minHeight: 280,\r\n              }}\r\n            >\r\n              {/* <Author /> */}\r\n              {/* <Posts /> */}\r\n              {/* <Collection /> */}\r\n              <Route path=\"/\" exact component={Posts} />\r\n              <Route path=\"/author\" component={Author} />\r\n              <Route path=\"/collection\" component={Collection} />\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Switch>\n            <App />\n        </Switch>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}